#!/bin/bash

# finanseHub Function App Deployment Script
# Dette scriptet deployer den ferdige koden til Azure Functions

set -e

# Configuration
FUNCTION_APP_NAME="finansehub-functions"
RESOURCE_GROUP="rg-finansehub"

echo "üöÄ Deploying finanseHub to Azure Functions..."

# Check if function app name is provided as argument
if [ $# -eq 1 ]; then
    FUNCTION_APP_NAME=$1
    echo "Using function app name: $FUNCTION_APP_NAME"
fi

# Navigate to backend directory
cd backend

echo "1Ô∏è‚É£ Building and testing application..."
../scripts/build-and-test.sh

echo "2Ô∏è‚É£ Verifying Azure CLI login..."
if ! az account show &> /dev/null; then
    echo "‚ùå Not logged in to Azure CLI. Please run 'az login' first."
    exit 1
fi

echo "3Ô∏è‚É£ Checking if Function App exists..."
if ! az functionapp show --name $FUNCTION_APP_NAME --resource-group $RESOURCE_GROUP &> /dev/null; then
    echo "‚ùå Function App '$FUNCTION_APP_NAME' not found in resource group '$RESOURCE_GROUP'"
    echo "Please run the infrastructure deployment script first: ../scripts/deploy-azure.sh"
    exit 1
fi

echo "4Ô∏è‚É£ Publishing to Azure Functions..."
func azure functionapp publish $FUNCTION_APP_NAME --typescript

echo "5Ô∏è‚É£ Verifying deployment..."
# Wait a moment for deployment to complete
sleep 10

# Check if functions are available
echo "Checking deployed functions..."
FUNCTIONS=$(az functionapp function list --name $FUNCTION_APP_NAME --resource-group $RESOURCE_GROUP --query "[].name" -o tsv)

if echo "$FUNCTIONS" | grep -q "timerSync"; then
    echo "‚úÖ timerSync function deployed successfully"
else
    echo "‚ö†Ô∏è  timerSync function not found"
fi

if echo "$FUNCTIONS" | grep -q "manualSync"; then
    echo "‚úÖ manualSync function deployed successfully"
else
    echo "‚ö†Ô∏è  manualSync function not found"
fi

echo "6Ô∏è‚É£ Running initial database migration..."
echo "Setting up database schema with Prisma..."

# Get database connection from Key Vault for migration
echo "Getting database URL from Key Vault..."
KV_NAME="kv-finansehub"
DATABASE_URL=$(az keyvault secret show --name "DATABASE-URL" --vault-name $KV_NAME --query value -o tsv)

if [ -n "$DATABASE_URL" ]; then
    export DATABASE_URL
    echo "Running Prisma database push..."
    npx prisma db push --accept-data-loss
    echo "‚úÖ Database schema updated"
else
    echo "‚ö†Ô∏è  Could not retrieve database URL from Key Vault"
    echo "Please run manually: npx prisma db push"
fi

echo "7Ô∏è‚É£ Testing deployment..."
echo "Getting function app URL..."
FUNCTION_URL="https://$FUNCTION_APP_NAME.azurewebsites.net"

echo "Manual sync endpoint: $FUNCTION_URL/api/manualSync"
echo "To test manually:"
echo "curl -X POST '$FUNCTION_URL/api/manualSync' -H 'x-cron-key: YOUR_CRON_KEY'"

echo ""
echo "‚úÖ Deployment completed successfully!"
echo ""
echo "üìã Summary:"
echo "   üè¢ Function App: $FUNCTION_APP_NAME"
echo "   üåê URL: $FUNCTION_URL"
echo "   ‚è∞ Timer function: Will run weekdays at 17:30 CET"
echo "   üîß Manual sync: $FUNCTION_URL/api/manualSync"
echo ""
echo "üìä Monitoring:"
echo "   Application Insights: https://portal.azure.com/#@/resource/subscriptions/$(az account show --query id -o tsv)/resourceGroups/$RESOURCE_GROUP/providers/microsoft.insights/components/ai-finansehub"
echo "   Function App Logs: https://portal.azure.com/#@/resource/subscriptions/$(az account show --query id -o tsv)/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Web/sites/$FUNCTION_APP_NAME"
echo ""
echo "üîç Next steps:"
echo "   1. Monitor first automatic run at 17:30"
echo "   2. Verify data in PostgreSQL database"
echo "   3. Set up Power BI dataset connection"
echo "   4. Test Power BI refresh automation"
